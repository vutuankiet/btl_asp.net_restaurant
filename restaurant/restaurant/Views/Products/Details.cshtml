@model restaurant.Models.EF.Product

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    #productslink {
        color: #bf9e71 !important;
    }
</style>

<div class="card shadow container col-12 col-sm-12 col-md-12 col-lg-8 col-xl-6 mt-5">
    <div class="card-body">
        <h4 class="text-left text-info"><span class="font-weight-normal">Destail Product</span></h4>
        <hr class="text-dark" />
        <div class="row">
            <div class="form-group col-12">
                <label class="control-label">Product type<span class="text-danger">*</span></label>
                @Html.EditorFor(model => model.Category.Name, null, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-12 col-md-6">
                <label class="control-label">Product name<span class="text-danger">*</span></label>
                @Html.EditorFor(model => model.NameProduct, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Ten San Pham", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NameProduct, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-12 col-md-6">
                <label class="control-label">Product image<span class="text-danger">*</span></label>
                @*@Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Anh San Pham" } })*@
                <div class="text-left">
                    <img src="~/@Model.Images" width="50" data-toggle="modal" data-target="#exampleModalCenter" class="rounded img-thumbnail" alt="@Model.Images">
                </div>

                <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title text-warning" id="exampleModalCenterTitle">@Model.NameProduct</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <img src="~/@Model.Images" class="rounded img-thumbnail" alt="@Model.Images">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-12 col-md-6">
                <label class="control-label">Date Added<span class="text-danger">*</span></label>
                @*@Html.EditorFor(model => model.Date.Value.ToString("dd-MM-yyyy"), new { htmlAttributes = new { @class = "form-control col-12", Type="date" } })*@
                <input type="date" id="Date" name="Date" class="form-control" readonly="readonly" value="@Model.Date.Value.ToString("dd/MM/yyyy")" />
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-12 col-md-6">
                <label class="control-label">Quantily<span class="text-danger">*</span></label>
                @Html.EditorFor(model => model.Quantily, new { htmlAttributes = new { @class = "form-control col-12", @Type = "number", @Min = "1", @Max = "1", @placeholder = "Gia San Pham", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Quantily, " ", new { @class = "text-danger" })
            </div>
            <div class="form-group col-12 col-md-6">
                <label class="control-label">Discount (%)<span class="text-danger">*</span></label>
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control col-12", @Type = "number", @Min = "0", @Max = "100", @placeholder = "Gia San Pham", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Discount, " ", new { @class = "text-danger" })
            </div>
            <div class="form-group col-12 col-md-6">
                <label class="control-label">UnitPrice ($)<span class="text-danger">*</span></label>
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control col-12", @Type = "number", @placeholder = "Gia San Pham", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 ml-3 col-md-10 p-0">
                @Html.ActionLink("Edit", "Edit", new { id = Model.ID }, htmlAttributes: new { @class = "btn btn-outline-warning" })
                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-outline-dark" })
            </div>
        </div>

    </div>
</div>
