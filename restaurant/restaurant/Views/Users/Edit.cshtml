@model restaurant.Models.EF.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    #userslink {
        color: #bf9e71 !important;
    }

    .form-control-dropdown {
        display: block;
        width: 100%;
        height: calc(1.5em + 0.75rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }
</style>

<div class="card shadow container col-12 col-sm-12 col-md-12 col-lg-8 col-xl-6">
    <div class="card-body">
        <h4 class="text-left text-warning"><span class="font-weight-normal">Edit User</span></h4>
        <hr class="text-dark" />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @*<h4>User</h4>
                    <hr />*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                <div class="row">
                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">User ID<span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly", @required = "Required" } })
                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">Role name<span class="text-danger">*</span></label>
                        <div class="form-group">
                            <div class="checkbox">
                                @Html.DropDownList("RolesID", null, new { htmlAttributes = new { @class = "form-control col-12", @required = "Required" } })
                                @Html.ValidationMessageFor(model => model.Role.NameRoles, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">User name<span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "User name", @readonly = "readonly", @required = "Required" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">Email<span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Email", @Type = "email", @readonly = "readonly", @required = "Required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">PassWord<span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "PassWord", @Type = "password", @readonly = "readonly", @required = "Required" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">ConfirmPassword<span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "ConfirmPassword", @Type = "password", @readonly = "readonly", @required = "Required" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">Phone number<span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control col-12", @placeholder = "Phone number", @Type = "tel", @pattern = "[0-9]{10}", @readonly = "readonly", @required = "Required" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-12 col-md-6">
                        <label class="control-label">Trang Thai<span class="text-danger">*</span></label>
                        <div class="form-group">
                            <div class="checkbox">
                                @Html.DropDownList("Status", ViewBag.Status as SelectList, htmlAttributes: new { @class = "form-control", @required = "Required" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 ml-3 col-md-10 p-0">
                        <input type="submit" value="Save" class="btn btn-outline-warning" />
                        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-outline-dark" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
